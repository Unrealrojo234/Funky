const express = require("express");
const app = express();
const params = require("express-params");

let author = `

#########################################################################################################
CREATOR: 

╭━━━╮╱╱╱╱╱╱╱╱╱╱╭━━━╮╭╮
┃╭━╮┃╱╱╱╱╱╱╱╱╱╱┃╭━╮┣╯╰╮
┃╰━╯┣╮╱╭┳━━┳━╮╱┃┃╱┃┣╮╭╋┳━━┳━╮╭━━╮
┃╭╮╭┫┃╱┃┃╭╮┃╭╮╮┃┃╱┃┃┃┃┣┫┃━┫╭╮┫╭╮┃
┃┃┃╰┫╰━╯┃╭╮┃┃┃┃┃╰━╯┃┃╰┫┃┃━┫┃┃┃╰╯┃
╰╯╰━┻━╮╭┻╯╰┻╯╰╯╰━━━╯╰━┻┻━━┻╯╰┻━━╯
╱╱╱╱╭━╯┃
╱╱╱╱╰━━╯

#########################################################################################################
DOCUMENTATION: https://fast.com

    ───▄▀▀▀▄▄▄▄▄▄▄▀▀▀▄───
    ───█▒▒░░░░░░░░░▒▒█───
    ────█░░█░░░░░█░░█────
    ─▄▄──█░░░▀█▀░░░█──▄▄─
    █░░█─▀▄░░░░░░░▄▀─█░░█


#########################################################################################################
USAGE: 
    In this current url, add a '/' and any number from 1 - 10 to generate text art 🫠.
    E.G; url/1 e.t.c


#########################################################################################################

    ██╗░░██╗░█████╗░██████╗░██████╗░██╗░░░██╗  ░█████╗░░█████╗░██████╗░██╗███╗░░██╗░██████╗░
    ██║░░██║██╔══██╗██╔══██╗██╔══██╗╚██╗░██╔╝  ██╔══██╗██╔══██╗██╔══██╗██║████╗░██║██╔════╝░
    ███████║███████║██████╔╝██████╔╝░╚████╔╝░  ██║░░╚═╝██║░░██║██║░░██║██║██╔██╗██║██║░░██╗░
    ██╔══██║██╔══██║██╔═══╝░██╔═══╝░░░╚██╔╝░░  ██║░░██╗██║░░██║██║░░██║██║██║╚████║██║░░╚██╗
    ██║░░██║██║░░██║██║░░░░░██║░░░░░░░░██║░░░  ╚█████╔╝╚█████╔╝██████╔╝██║██║░╚███║╚██████╔╝
    ╚═╝░░╚═╝╚═╝░░╚═╝╚═╝░░░░░╚═╝░░░░░░░░╚═╝░░░  ░╚════╝░░╚════╝░╚═════╝░╚═╝╚═╝░░╚══╝░╚═════╝░

###########################################################################################################
`;

app.get("/", (req, res) => {
  res.send(author);
});

const myCharacters = {
  first: `         
⊂_ヽ
     ＼＼
         ＼( ͡° ͜ʖ ͡°)
              >    ⌒ヽ
            /      へ＼
         /        /    ＼＼
         ﾚ    ノ         ヽ_つ
        /    /
     /    /|
    (    (ヽ
    |    |、＼
    | 丿 ＼ ⌒)
    | |        ) /
ノ )        Lﾉ
(_／ `,
  second: `

        　　｡ﾟﾟ･｡･ﾟﾟ｡
         ﾟ。        ｡ﾟ
             ﾟ･｡･ﾟ
       ︵               ︵
    (        ╲       /       /
      ╲          ╲/       /
           ╲          ╲  /
          ╭ ͡   ╲           ╲
     ╭ ͡   ╲        ╲       ﾉ
╭ ͡   ╲        ╲         ╱
 ╲       ╲          ╱
      ╲         ╱
          ︶ 
`,
  third: `
┈┈┈┈▕▔╱▔▔▔━▁
┈┈┈▕▔╱╱╱👁┈╲▂▔▔╲
┈┈▕▔╱╱╱╱💧▂▂▂▂▂▂▏
┈▕▔╱▕▕╱╱╱┈▽▽▽▽▽
▕▔╱┊┈╲╲╲╲▂△△△△
▔╱┊┈╱▕╲▂▂▂▂▂▂╱
╱┊┈╱┉▕┉┋╲┈ 
`,
  forth: `
  
♡▀█▀ █▀ █▀▀▄ █ █▄░▄█ ▄▀▄♡
♡░█░ █▀ █▐█▀ █ █░█░█ █▀█♡
♡░▀░ ▀▀ ▀░▀▀ ▀ ▀░░░▀ ▀░▀♡
❥█░▄▀ ▄▀▄ ▄▀▀ █ █░█☙
❥█▀▄░ █▀█ ░▀▄ █ █▀█☙
❥▀░▀▀ ▀░▀ ▀▀░ ▀ ▀░▀☙ `,
  fifth: `           
  
            ────────────█████████
            ──────────███║║║║║║║███
            ─────────█║║║║║║║║║║║║║█
            ────────█║║║║███████║║║║█
            ───────█║║║║██─────██║║║║█
            ──────█║║║║██───────██║║║║█
            ─────█║║║║██─────────██║║║║█
            ─────█║║║██───────────██║║║█
            ─────█║║║█─────────────█║║║█
            ─────█║║║█─────────────█║║║█
            ─────█║║║█─────────────█║║║█
            ─────█║║║█─────────────█║║║█
            ────███████───────────███████
            ───██║║║║║║██────────██║║║║║██
            ──██║║║║║║║║██──────██║║║║║║║██
            ─██║║║║║║║║║║██───██║║║║║║║║║║██
            ██║║║║║║║║║║║║█████║║║║║║║║║║║║██
            █║║║║║║║║║║║║║║║║║║║║║║║║║║║║║║║█
            █║║║║║║║║║║║║║█████║║║║║║║║║║║║║█
            █║║║║║║║║║║║║█░░░░░█║║║║║║║║║║║║█
            █║║║║║║║║║║║║█░░░░░█║║║║║║║║║║║║█
            █║║║║║║║║║║║║█░░░░░█║║║║║║║║║║║║█
            ██║║║║║║║║║║║█░░░░░█║║║║║║║║║║║██
            ██║║║║║║║║║║║║█░░░█║║║║║║║║║║║║██
            ─██║║║║║║║║║║║█░░░█║║║║║║║║║║║██
            ──██║║║║║║║║║║█░░░█║║║║║║║║║║██
            ───██║║║║║║║║║█░░░█║║║║║║║║║██
            ────██║║║║║║║║█████║║║║║║║║██
            ─────██║║║║║║║║███║║║║║║║║██
            ──────██║║║║║║║║║║║║║║║║║██
            ───────██║║║║║║║║║║║║║║║██
            ────────██║║║║║║║║║║║║║██
            ─────────██║║║║║║║║║║║██
            ──────────██║║║║║║║║║██
            ───────────██║║║║║║║██
            ────────────██║║║║║██
            ─────────────██║║║██
            ──────────────██║██
            ───────────────███
            ───────────────────────▄██▄▄██▄
            ──────────────────────██████████
            ──────────────────────▀████████▀
            ────────────────────────▀████▀
            ─────────────────────────████
            ─────────────────────────████
            ─────────────────────────████
            ─────────────────────────████
            ─────────────────────────████
            ─────────────────────────████
            ─────────────────────────████
            ─────────────────────────████
            ──────────────────────▄▄▄████
            ──────────────────────▀▀▀████
            ──────────────────────▀▀▀████
            ──────────────────────▀▀▀████
            ──────────────────────▄█████▀

  
  `,

  sixth: `
         ／＞　　フ
　　　　　| 　_　 _l
　 　　　／ ミ＿xノ
　　 　 /　　　 　 |
　　　 /　 ヽ　　 ﾉ
　 　 │　　| | | 
`,

  seventh: `

            ────────────────████
            ───────────────█░░███
            ───────────────█░░████
            ────────────────███▒██─────████████
            ──────████████─────█▒█──████▒▒▒▒▒▒████
            ────███▒▒▒▒▒▒████████████░░████▒▒▒▒▒███
            ──██▒▒▒▒░▒▒████░░██░░░░██░░░░░█▒▒▒▒▒▒▒███
            ─██▒▒░░░░▒██░░░░░█▒░░░░░██▒░░░░░░░▒▒▒▒▒▒█
            ██▒░░░░░▒░░░░░░░░░▒░░░░░░░▒▒░░░░░░░▒▒▒▒▒██
            █░░░░░░▒░░░██░░░░░░░░░░░░░██░░░░░░░░▒▒▒▒▒█
            █░░░░░░░░█▒▒███░░░░░░░░░█▒▒███░░░░░░░▒▒▒▒█
            █░░░░░░░████████░░░░░░░████████░░░░░░▒▒▒▒█
            █░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒█
            ██░░░█░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█░▒▒▒▒█
            ─█░░░░██░█░░░░░░░░░░░░░░░░░░░░░░░███▒▒▒▒▒█
            ─█▒▒░░░░█████░░░█░░░░██░░░██░░████░▒▒▒▒▒▒█
            ─██▒▒░░░░░█████████████████████░░░▒▒▒▒▒▒██
            ──██▒▒▒▒░░░░░██░░░███░░░██░░░█░░░▒▒▒▒▒▒██
            ───███▒▒▒░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒█████
            ─────███▒▒▒▒▒▒░░░░░░░░░░░░░▒▒▒▒▒▒████
            ────────██████████████████████████


`,

  eighth: `

────────▄▄▄▄▄▄▄▄▄
────────▌▐░▀░▀░▀▐
────────▌░▌░░░░░▐
────────▌░░░░░░░▐
────────▄▄▄▄▄▄▄▄▄
──▄▀▀▀▀▀▌▄█▄░▄█▄▐▀▀▀▀▀▄
─█▒▒▒▒▒▐░░░░▄░░░░▌▒▒▒▒▒█
▐▒▒▒▒▒▒▒▌░░░░░░░▐▒▒▒▒▒▒▒▌
▐▒▒▒▒▒▒▒█░▀▀▀▀▀░█▒▒▒▒▒▒▒▌
▐▒▒▒▒▒▒▒▒█▄▄▄▄▄█▒▒▒▒▒▒▒▒▌
▐▒▒▒▒▐▒▒▒▒▒▒▒▒▒▒▒▒▐▒▒▒▒▒▌
▐▒▒▒▒▒█▒▒▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▌
▐▒▒▒▒▒▐▒▒▒▒▒▒▒▒▒▒▒▌▒▒▒▒▒▌
▐▒▒▒▒▒▒▌▒▒▒▒▒▒▒▒▒▐▒▒▒▒▒▒▌
▐▒▒▒▒▒▒▌▄▄▄▄▄▄▄▄▄▐▒▒▒▒▒▒▌
▐▄▄▄▄▄▄▌▌███████▌▐▄▄▄▄▄▄▌
─█▀▀▀▀█─▌███▌███▌─█▀▀▀▀█
─▐░░░░▌─▌███▌███▌─▐░░░░▌
──▀▀▀▀──▌███▌███▌──▀▀▀▀
────────▌███▌███▌
────────▌███▌███▌
──────▐▀▀▀██▌█▀▀▀▌
▒▒▒▒▒▒▐▄▄▄▄▄▄▄▄▄▄▌▒▒▒▒▒▒▒


`,

  ninth: `
░░░░░░███████ ]▄▄▄▄▄▄▄▄
▂▄▅█████████▅▄▃▂
I███████████████████].
◥⊙▲⊙▲⊙▲⊙▲⊙▲⊙▲⊙◤...


`,

  tenth: `

───────────────████████ ★
────────────██████████████ ★
──────────█████────────█████ ★
────────████─────████─────████ ★
───────███───███████████────███ ★
──────██────███████░░░████───███ ★
─────██───█████████░░░░░░██───███ ★ 
────██───██████████░░░░░░░██───███ ★
────██───██████████░░░░░░░░░█───███ ★
───██───███████████░░░░░░░░░░█───██ ★
──██───████████████░░░░░░░░░░█───███ ★
──█████████████████░░░░░░░░░░░██████ ★
──███▓▓████████████░░░░░░░░░░░█▓▓███ ★
─██▓▓▓█████████████░░░░░░░░░░░░█▓▓▓██ ★
─█▓▓▓▓█████████████░░░░░░░░░░░░█▓▓▓▓█ ★
█▓▓▓▓▓█████████████░░░░░░░░░░░░█▓▓▓▓▓█ ★
█▓▓▓▓▓████████░░░░█░████░░░░░░░█▓▓▓▓▓█ ★
█▓▓▓▓▓████████░░░░█░████░░░░░░░█▓▓▓▓▓█ ★
█▓▓▓▓▓████████░░░░█░████░░░░░░░█▓▓▓▓▓█ ★
█▓▓▓▓▓█████████░░██░░██░░░░░░░██▓▓▓▓▓█ ★
─█▓▓▓▓▓████████████░░░░░░░░░░░█▓▓▓▓▓█ ★
─██▓▓▓▓████████████░░░░░░░░░░░█▓▓▓▓██ ★
──██▓▓▓████████████░░░░░░░░░░░█▓▓▓██ ★
────█████████████░░██░░░░░░░██████ ★
─────────██████████░░░░░░░░██ ★
──────────████████░█░░░░░███ ★
───────────███████░█░░░████ ★
─────────────████████████ ★
───────────────████████ ★


`,
};

app.get("/:value", (req, res) => {
  const value = parseInt(req.params.value);

  switch (value) {
    case 1:
      res.send(myCharacters.first);
      break;

    case 2:
      res.send(myCharacters.second);
      break;

    case 3:
      res.send(myCharacters.third);
      break;
    case 4:
      res.send(myCharacters.forth);
      break;
    case 5:
      res.send(myCharacters.fifth);
      break;
    case 6:
      res.send(myCharacters.sixth);
      break;
    case 7:
      res.send(myCharacters.seventh);
      break;
    case 8:
      res.send(myCharacters.eighth);
      break;
    case 9:
      res.send(myCharacters.ninth);
      break;
    default:
      res.send(myCharacters.tenth);
  }
});

app.listen(3000, () => {
  console.log("Server is running on port: ", 3000);
});
